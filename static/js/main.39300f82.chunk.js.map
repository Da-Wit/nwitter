{"version":3,"sources":["Icebase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","dbService","firebaseInstance","storageService","userObj","refreshUser","useState","displayName","newDisplayName","setNewDisplayName","history","useHistory","getMyNweets","a","collection","where","uid","orderBy","get","useEffect","onSubmit","e","preventDefault","updateProfile","type","placeholder","onChange","target","value","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","event","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","update","maxLength","src","width","height","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","add","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","nweets","setNweets","onSnapshot","snapshot","nweetArray","docs","map","nweetInNweets","key","Navigation","to","isLoggedIn","exact","path","Home","Profile","Auth","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Router","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39300f82.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const firebaseInstance = firebase;\r\nexport const storageService = firebase.storage();\r\n","import { authService, dbService } from \"Icebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const history = useHistory();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    refreshUser();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .get();\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  });\r\n  const onChange = (e) => {\r\n    setNewDisplayName(e.target.value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log out</button>\r\n    </>\r\n  );\r\n};\r\n","import { authService } from \"Icebase\";\r\nimport React, { useState } from \"react\";\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    }\r\n    if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n        // create account\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n        // log in\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          name=\"email\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          name=\"password\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error}\r\n      </form>\r\n      <div onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"Icebase\";\r\nimport React from \"react\";\r\n\r\nexport default () => {\r\n  const onSocialClick = async (event) => {\r\n    const name = event.target.name;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button name=\"google\" onClick={onSocialClick}>\r\n          Continue with Google\r\n        </button>\r\n        <button name=\"github\" onClick={onSocialClick}>\r\n          Continue with Github\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { dbService, storageService } from \"Icebase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChange = (e) => {\r\n    setNewNweet(e.target.value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing && isOwner ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              value={newNweet}\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              maxLength={120}\r\n              required\r\n              onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"Icebase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (e) => {\r\n    const files = e.target.files;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      setAttachment(finishedEvent.currentTarget.result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(null);\r\n  };\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService } from \"Icebase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport default ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweetInNweets) => (\r\n          <Nweet\r\n            key={nweetInNweets.id}\r\n            nweetObj={nweetInNweets}\r\n            isOwner={nweetInNweets.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  console.log(userObj);\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nexport default ({ isLoggedIn, refreshUser, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport Router from \"components/Router\";\nimport { authService } from \"Icebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <Router\n          isLoggedIn={Boolean(userObj)}\n          refreshUser={refreshUser}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}